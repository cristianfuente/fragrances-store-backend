name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compilar la app Quarkus
        run: ./mvnw package -DskipTests

      - name: Build de imagen Docker
        run: docker build -t cristianuis/quarkus-app:${{ github.run_number }} -t cristianuis/quarkus-app:latest .

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push de la imagen
        run: |
          docker push cristianuis/quarkus-app:${{ github.run_number }}
          docker push cristianuis/quarkus-app:latest

      - name: Deploy en EC2 via SSH + docker-compose
        run: |
          echo "🔐 Configurando acceso SSH"
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          echo "🚀 Ejecutando despliegue en EC2"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e

            echo "🔧 Instalando Docker si es necesario..."
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
          
            echo "🧹 Limpiando Docker: contenedores y volúmenes..."
            CONTAINERS=\$(sudo docker ps -aq)
            if [ -n "\$CONTAINERS" ]; then
              sudo docker stop \$CONTAINERS
              sudo docker rm \$CONTAINERS
            fi

            VOLUMES=\$(sudo docker volume ls -q)
            if [ -n "\$VOLUMES" ]; then
              sudo docker volume rm -f \$VOLUMES
            fi

            sudo docker network prune -f || true

            echo "📥 Login en Docker Hub y pull de imagen"
            sudo docker login -u cristianuis -p '${{ secrets.DOCKER_PASSWORD }}'
            sudo docker pull cristianuis/quarkus-app:latest

            echo "🧹 Eliminando imágenes antiguas excepto la nueva"
            CURRENT_IMAGE_ID=\$(sudo docker images -q cristianuis/quarkus-app:latest)
            for IMAGE_ID in \$(sudo docker images -q | sort -u); do
              if [ "\$IMAGE_ID" != "\$CURRENT_IMAGE_ID" ]; then
                sudo docker rmi -f \$IMAGE_ID || true
              fi
            done

            echo "🚀 Ejecutando contenedor Quarkus conectado a RDS"
            sudo docker run -d --name quarkus-app \
              -e DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              -p 8443:8443 \
              cristianuis/quarkus-app:latest

            echo "✅ Despliegue completo"
            sudo docker ps
            echo "📋 Logs recientes de quarkus-app:"
            sudo docker logs --tail=50 quarkus-app || true
          EOF
