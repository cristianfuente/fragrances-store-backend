name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compilar la app Quarkus
        run: ./mvnw package -DskipTests

      - name: Build de imagen Docker
        run: docker build -t cristianuis/quarkus-app:${{ github.run_number }} -t cristianuis/quarkus-app:latest .

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push de la imagen
        run: |
          docker push cristianuis/quarkus-app:${{ github.run_number }}
          docker push cristianuis/quarkus-app:latest

      - name: Deploy en EC2 via SSH + docker-compose
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          echo "📄 Copiando docker-compose.yaml a EC2"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/app/testdb"
          scp -i ~/.ssh/id_rsa testdb/docker-compose.yaml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app/testdb

          echo "🚀 Conectando a EC2 para instalar y desplegar"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e

            echo "🔧 Instalando Docker..."
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            echo "🔧 Instalando Docker Compose (clásico)..."
            if ! command -v docker-compose >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-\$(uname -s)-\$(uname -m)" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "📥 Login a Docker Hub y pull de imagen"
            sudo docker login -u cristianuis -p '${{ secrets.DOCKER_PASSWORD }}'
            sudo docker pull cristianuis/quarkus-app:latest

            echo "🧹 Limpiando contenedores antiguos..."
            sudo docker stop quarkus-app || true
            sudo docker rm quarkus-app || true

            cd ~/app/testdb

            echo "🐘 Levantando base de datos con docker-compose..."
            sudo docker-compose -f docker-compose.yaml down
            sudo docker-compose -f docker-compose.yaml up -d

            echo "⏳ Esperando 10s a que DB esté lista..."
            sleep 10

            echo "🚀 Ejecutando contenedor Quarkus..."
            NETWORK_NAME=\$(docker network ls --filter name=testdb_default --format "{{.Name}}")
            sudo docker run -d --name quarkus-app \
              --network "\$NETWORK_NAME" \
              -e DB_HOST=postgres \
              -p 8443:8443 \
              cristianuis/quarkus-app:latest

            echo "✅ Despliegue completo"
            echo "📋 Logs recientes:"
            sudo docker logs --tail=50 quarkus-app || true
          EOF
