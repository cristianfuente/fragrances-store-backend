name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build de la aplicación
        run: ./mvnw package -DskipTests

      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Subir archivos a EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/app"
          scp -i ~/.ssh/id_rsa -r target/quarkus-app Dockerfile testdb ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app

      - name: Desplegar en EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🔧 Instalando Docker y Docker Compose si es necesario..."
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
              newgrp docker
            fi

            if ! docker compose version >/dev/null 2>&1; then
              mkdir -p ~/.docker/cli-plugins
              curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 \
                -o ~/.docker/cli-plugins/docker-compose
              chmod +x ~/.docker/cli-plugins/docker-compose
            fi

            echo "📦 Despliegue desde ~/app..."
            cd ~/app

            echo "🧹 Limpiando contenedores anteriores..."
            docker compose -f testdb/docker-compose.yml down --volumes --remove-orphans || true
            docker stop quarkus-app || true
            docker rm quarkus-app || true

            echo "🏗️ Construyendo imagen de Quarkus..."
            docker build -f Dockerfile -t my-quarkus-app .

            echo "🚀 Levantando PostgreSQL..."
            docker compose -f testdb/docker-compose.yml up -d

            echo "🚀 Corriendo app Quarkus..."
            docker run -d --name quarkus-app \
              -p 8080:8080 -p 8443:8443 \
              --network testdb_default \
              -e DB_HOST=db \
              my-quarkus-app

            echo "✅ Despliegue completo"
          EOF
