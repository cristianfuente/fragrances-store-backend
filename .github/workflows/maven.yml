name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compilar la app Quarkus
        run: ./mvnw package -DskipTests

      - name: Build de imagen Docker
        run: docker build -t cristianuis/quarkus-app:${{ github.run_number }} -t cristianuis/quarkus-app:latest .

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push de la imagen
        run: |
          docker push cristianuis/quarkus-app:${{ github.run_number }}
          docker push cristianuis/quarkus-app:latest

      - name: Deploy en EC2 via SSH + docker-compose
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          echo "ðŸ“„ Copiando docker-compose.yaml a EC2"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/app/testdb"
          scp -i ~/.ssh/id_rsa testdb/docker-compose.yaml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app/testdb/docker-compose.yaml

          echo "ðŸš€ Conectando a EC2 para instalar y desplegar"
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "ðŸ”§ Instalando Docker si es necesario..."
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            echo "ðŸ”§ Instalando Docker Compose plugin si es necesario..."
            if ! docker compose version >/dev/null 2>&1; then
              mkdir -p ~/.docker/cli-plugins
              curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 \
                -o ~/.docker/cli-plugins/docker-compose
              chmod +x ~/.docker/cli-plugins/docker-compose
            fi

            echo "ðŸ“¥ Login a Docker Hub y pull de imagen"
            sudo docker login -u cristianuis -p '${{ secrets.DOCKER_PASSWORD }}'
            sudo docker pull cristianuis/quarkus-app:latest

            echo "ðŸ§¹ Deteniendo servicios anteriores..."
            cd ~/app/testdb
            sudo docker compose -f docker-compose.yaml down --volumes --remove-orphans || true

            echo "ðŸš€ Levantando servicios con docker-compose..."
            sudo docker compose -f docker-compose.yaml up -d

            echo "âœ… Despliegue completo"
            echo "ðŸ§ª Contenedores activos:"
            sudo docker ps
          EOF
